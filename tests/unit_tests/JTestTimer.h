#ifndef TEST_TIMER_H
#define TEST_TIMER_H

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Includes
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "../JTest.h"
#include <core/time/JTimer.h>
#include <core/diagnostics/JLogger.h>

namespace joby{

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Tests
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class TimerTest : public Test
{
public:

    TimerTest(): Test(){}
    ~TimerTest() {}

    /// @brief Perform unit tests for Timer class
    virtual void perform() {

        // Create and run timer
        Timer timer;
        timer.start();

        // Run timer for a few seconds to confirm that it works
        double elapsedTime = 0;
        while (elapsedTime < 5) {
            elapsedTime = timer.getElapsed<double>();
            Logger::LogInfo(std::to_string(elapsedTime).c_str());
        }
    }
};


/////////////////////////////////////////////////////////////////////////////////////////////////////////////
// End namespaces
}


#endif